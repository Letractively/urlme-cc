@model ianhd.admin.ViewModels.SiteFeatureIndex
@using ianhd.core.Extensions

<div id="siteFeatureIndex">
    <h2 data-bind="text: categoryTitle"></h2>
    @using (Html.BeginForm("Index", "SiteFeature", FormMethod.Post))
    {
        // hiddens?
        <input name="lastDate" data-bind="value: lastDate" type="hidden" />
        <input name="siteFeatureCategoryId" data-bind="value: siteFeatureCategoryId" type="hidden" />
        
        <textarea name="value" data-bind="visible: html(), value: value, attr: { 'max-value-length': maxValueLength, 'placeholder': hintText }" maxlength="250" cols="20" class="input"></textarea>
        <div id="drop" data-bind="visible: imageUrl()">Drop bulldog(s) here</div>
        
        <div>When?</div>
        <div class="buttonset">
            @{ var dateOptions = string.Format("nextVacantDay`{0}|whenever`Whenever|custom`...", Model.newSiteFeature.startDate.Value.ToString("MMM d, yyyy")); }
            @foreach (var dateOption in dateOptions.Split('|'))
            {
                var parts = dateOption.Split('`');
                var value = parts[0];
                var text = parts[1];
                <input type="radio" name="buttonset" id="step1_@value" value="@value" /><label for="step1_@value">@text</label>
            }
        </div>
        <div class="dateControls" data-bind="visible: custom()">
            <div class="allButDatePicker"><span>Show on</span></div>
            <input name="startDate" type="date" class="input" data-bind="value: startDate" />
        </div>
        <div id="controls">
            <button class="blueButton" type="submit">Save</button> or <a href="onclick:location.reload();return false;" class="cancel">Cancel</a>
        </div>
    }

    <div id="siteFeatures" data-bind="foreach: siteFeatures">
        <div data-bind="attr: { id: siteFeatureId }">
            <span data-bind="text: value"></span> - <span class="when" data-bind="text: when"></span> - <a data-bind="attr: { 'href': deleteUrl }" class="delete">Delete</a>
        </div>
    </div>
</div>

<script>
    var data = {};
    var wheneverVal = "whenever", customVal = "custom", nextVacantDayVal = "nextVacantDay";

    var dateOptionKey = "dateOption";
    var savedDateOption = localStorage.getItem(dateOptionKey);

    // new item
    data.value = '@Html.Raw(Model.newSiteFeature.value)';
    data.maxValueLength = '@Model.newSiteFeature.maxValueLength';
    data.hintText = '@Model.newSiteFeature.hintText';
    data.categoryTitle = '> @Model.newSiteFeature.categoryTitle';
    data.startDate = '@Model.newSiteFeature.startDate.Value.ToString("yyyy-MM-dd")';
    data.lastDate = data.startDate;
    data.siteFeatureCategoryId = @Model.newSiteFeature.siteFeatureCategoryId;
    data.valueType = '@Model.newSiteFeature.valueType';
    data.html = data.valueType === "html";
    data.imageUrl = data.valueType === "imageUrl";

    // initial buttonset value
    data.dateOption = savedDateOption || nextVacantDayVal; // nextVacantDay || whenever || custom
    data.whenever = data.dateOption === wheneverVal;
    data.nextVacantDay = data.dateOption === nextVacantDayVal;
    data.custom = data.dateOption === customVal;

    // list
    data.siteFeatures = @Html.Raw(Model.siteFeatures.OrderByDescending(x => x.createDate).ToJson());
    $.each(data.siteFeatures, function(i, sf) {
        sf.deleteUrl = '@Url.Content("~/")' + "sitefeatures/delete/" + sf.siteFeatureId;
    });

    var viewModel = ianhd.pluginHelpers.ko.getViewModel(data);

    var updateDateOption = function(val) {
        localStorage.setItem(dateOptionKey, val);
        viewModel.whenever(val === wheneverVal);
        viewModel.nextVacantDay(val === nextVacantDayVal);
        viewModel.custom(val === customVal);
        
        // update viewModel's startDate, and endDate for that matter
        if (viewModel.whenever()) {
            viewModel.startDate(null);
        } else if (viewModel.nextVacantDay() || viewModel.custom()) {
            // if custom, then preset it for them to whatever nextVacantDay val is
            viewModel.startDate(data.startDate);
        }
    };
    updateDateOption(data.dateOption);

    // subscriptions    viewModel.dateOption.subscribe(function (val) {
        updateDateOption(val);
    });
    viewModel.startDate.subscribe(function(val) {
        console.log("subscribe startDate");
        // for now, match starting with end date
        viewModel.lastDate(val);
    });

    // bind this thing    ianhd.pluginHelpers.ko.bind(viewModel);
</script>
@Scripts.Render("~/scripts/ianhd/ianhd.siteFeature.index.js")
