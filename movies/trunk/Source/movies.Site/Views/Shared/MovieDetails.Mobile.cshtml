@model movies.Model.Movie
@using movies.Model

@Model.title^
@*json callback looks for above prefix to extract the movie title*@
<div class="topHalf">
    <div><img width="170" height="270" class="poster" src="@this.Model.posters.detailed" /></div>
    <div>
        <p class="group"><span class='mpaaRating'>@this.Model.mpaa_rating</span><span class="duration">@this.Model.DurationCompact</span></p>
        <p><a href="@this.Model.ParentalGuideUrl" target="_blank">Parental Guide</a></p>
        @if (this.Model.IsReleased)
        {
            this.Html.RenderPartial("Ratings", new movies.Site.ViewModels.Shared.Ratings { Movie = this.Model, RatingSize = Enumerations.RatingSizes.small, IFrameIMDbRating = true });
        }
        else
        {
            <p class="releaseDate">@this.Model.ReleaseDate.ToString("MMM dd, yyyy")</p>    
        }
    </div>
</div>
@if (this.Model.Review != null)
{
    <p class="ourReview medium group">
        <span class="@Model.Review.ClassName icon"></span>"@Model.Review.Text" <a class="text" href="@Model.Review.Url" target="_blank">- JohnHanlonReviews.com</a>
    </p>
}
<p class="starring">
    <strong>Starring</strong>: 
    @{ int i = 0; }
    @foreach (var ac in this.Model.abridged_cast)
    {
        @(i == 0 ? ac.name : ", " + ac.name)
        i++;
    }
</p>
<p class="description"><strong>Synopsis</strong>: @this.Model.synopsis</p>