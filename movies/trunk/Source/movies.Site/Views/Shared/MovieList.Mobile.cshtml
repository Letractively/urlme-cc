@model Dictionary<string, movies.Model.Movie>
@using movies.Model

<ul>
@foreach (var movie in Model.Values)
{
    <li><a href="~/@movie.MovieSlug"><img width="61" height="91" src="@movie.posters.thumbnail" /></a></li>
}
</ul>
    
@{ return; }

@foreach (var movie in this.Model.Values)
{
    if (movie.alternate_ids != null)
    {
    <li class="movie group"><a href="~/@movie.MovieSlug">
        <img width="61" height="91" class="lazy" data-original="@movie.posters.thumbnail" src="~/scripts/plugins/lazyload/grey.gif" />
        <span class="details">
            <h3>@movie.title<span class="mpaaRating">@movie.mpaa_rating</span></h3>
            @if (movie.IsReleased) {
                this.Html.RenderPartial("Ratings", new movies.Site.ViewModels.Shared.Ratings { Movie = movie, RatingSize = Enumerations.RatingSizes.small, ShowSion = true });
            } else {
                <span data-releasedate="@movie.release_dates.theater.ToString("MM/dd/yyyy")"><span title="@movie.release_dates.theater.ToString("MMM d, yyyy")"></span></span>
            }
        </span>
        @*<span class="rightArrow"></span>*@
    </a></li>
    }
}
