@model Dictionary<string, movies.Model.Movie>

@foreach (var movie in this.Model)
{
    if (movie.Value.Alternate_Ids != null)
    {
    <div class="movie rounded glowing" data-rtmovieid="@movie.Value.Id">
        <a class="movieDetailsLink" href="#"><img src="@movie.Value.Posters.Detailed" /></a>
        <div class="details gradient">
            <p class="ratingAndLength">
                @movie.Value.Duration<a href="@movie.Value.ParentalGuideUrl" class='mpaaRating external' target='_blank' title='Link to Parents Guide on IMDb.com'>@movie.Value.Mpaa_Rating</a>
            </p>
            @if (movie.Value.IsReleased) {
                <div class="ratings"><a href="@movie.Value.Links.Alternate" class='@movie.Value.CriticsClass rottenTomato' target='_blank' title="Critics score on RottenTomatoes">@movie.Value.Ratings.Critics_Score<sup>%</sup></a><a href="@movie.Value.Links.Alternate" class='@movie.Value.AudienceClass rottenTomato' target='_blank' title="Audience score on RottenTomatoes">@movie.Value.Ratings.Audience_Score<sup>%</sup></a><a class='imdb' href="@movie.Value.IMDbMovieUrl" target='_blank' title="@string.Format("{0} votes on IMDb.com", movie.Value.ImdbVotes)">@movie.Value.ImdbRating</a></div>
            } else {
                <p class="releaseDate">@movie.Value.ReleaseDate</p>
            }
        </div>
    </div>    
    }
}