#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace play.Site.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bakersdozen132")]
	public partial class PlayDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPlayOrder(PlayOrder instance);
    partial void UpdatePlayOrder(PlayOrder instance);
    partial void DeletePlayOrder(PlayOrder instance);
    #endregion
		
		public PlayDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["bakersdozen132ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PlayDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlayDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlayDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlayDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PlayOrder> PlayOrders
		{
			get
			{
				return this.GetTable<PlayOrder>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ihdavis2.PlayOrder")]
	public partial class PlayOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlayOrderId;
		
		private string _Name;
		
		private int _CoupleTicketCount;
		
		private int _IndividualTicketCount;
		
		private System.DateTime _PlayDate;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlayOrderIdChanging(int value);
    partial void OnPlayOrderIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCoupleTicketCountChanging(int value);
    partial void OnCoupleTicketCountChanged();
    partial void OnIndividualTicketCountChanging(int value);
    partial void OnIndividualTicketCountChanged();
    partial void OnPlayDateChanging(System.DateTime value);
    partial void OnPlayDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public PlayOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayOrderId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlayOrderId
		{
			get
			{
				return this._PlayOrderId;
			}
			set
			{
				if ((this._PlayOrderId != value))
				{
					this.OnPlayOrderIdChanging(value);
					this.SendPropertyChanging();
					this._PlayOrderId = value;
					this.SendPropertyChanged("PlayOrderId");
					this.OnPlayOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoupleTicketCount", DbType="Int NOT NULL")]
		public int CoupleTicketCount
		{
			get
			{
				return this._CoupleTicketCount;
			}
			set
			{
				if ((this._CoupleTicketCount != value))
				{
					this.OnCoupleTicketCountChanging(value);
					this.SendPropertyChanging();
					this._CoupleTicketCount = value;
					this.SendPropertyChanged("CoupleTicketCount");
					this.OnCoupleTicketCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndividualTicketCount", DbType="Int NOT NULL")]
		public int IndividualTicketCount
		{
			get
			{
				return this._IndividualTicketCount;
			}
			set
			{
				if ((this._IndividualTicketCount != value))
				{
					this.OnIndividualTicketCountChanging(value);
					this.SendPropertyChanging();
					this._IndividualTicketCount = value;
					this.SendPropertyChanged("IndividualTicketCount");
					this.OnIndividualTicketCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayDate", DbType="DateTime NOT NULL")]
		public System.DateTime PlayDate
		{
			get
			{
				return this._PlayDate;
			}
			set
			{
				if ((this._PlayDate != value))
				{
					this.OnPlayDateChanging(value);
					this.SendPropertyChanging();
					this._PlayDate = value;
					this.SendPropertyChanged("PlayDate");
					this.OnPlayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
