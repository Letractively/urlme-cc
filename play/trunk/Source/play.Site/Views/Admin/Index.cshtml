@model play.Site.ViewModels.AdminIndex
@using play.Site.Extensions

@{
    Layout = null;
}

<html>
    <head>
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryui")
        @Scripts.Render("~/bundles/knockout")
        @Scripts.Render("~/bundles/ihdavis")

        @Styles.Render("~/content/site.css")
        @Styles.Render("~/content/themes/dot-luv/css/jquery-ui-1.10.1.custom.css")
        @Styles.Render("~/scripts/plugins/datatables/datatable_jui.css")
        @Scripts.Render("~/scripts/plugins/datatables/jquery.dataTables.min.js")
        
        @Scripts.Render("~/scripts/plugins/blockUI/jquery.blockUI.js")
        @Styles.Render("~/scripts/plugins/blockUI/style.css")

        <script>
            var orderCount = @Model.Orders.Count;
        </script>
        @Scripts.Render("~/scripts/ihdavis.siteActions.js")
        @Scripts.Render("~/scripts/ihdavis.admin.index.js")
        @Scripts.Render("http://www.openjs.com/scripts/events/keyboard_shortcuts/shortcut.js")
        
        @Scripts.Render("~/scripts/plugins/intro/intro.min.js")
        @Styles.Render("~/scripts/plugins/intro/introjs.min.css")
    </head>
    <body class="adminIndex">

        <div id="moreInfo" data-bind="attr: { 'data-item-id': PlayOrderId }">
            <div>
                Email:
                <div><a tabindex="-1" data-bind="attr: { href: MailTo }, text: Email"></a></div>
            </div>
            <div>
                How they heard:
                <div data-bind="text: HowDidYouHear"></div>
            </div>
            <div>
                User agent:
                <div data-bind="text: UserAgent"></div>
            </div>
            <div>
                <a href="sendconfirmation" data-bind="text: ResendConfText" class="sendConfirmation"></a>
            </div>
        </div>

        <h2>Admin<a id="notif" title="Click to refresh" href="~/admin"><span class="icon"></span>Refresh to see <span id="newCount">0</span> new order<span id="newPlural"></span>!</a></h2>
        
        <div id="stats">
            <div class="header">
                <a href="#" class="active">Both</a><a href="#">Saturday</a><a href="#">Sunday</a>
            </div>
            <div class="numbers group">
                <script>
                    @{ var totalFormat = "#,#0"; }
                    var bothSeatCount = @Model.SeatCount;
                    var bothOrderTotal = '@(Model.OrderTotal.ToString(totalFormat)).00';
                    var satSeatCount = @Model.SatSeatCount;
                    var satOrderTotal = '@(Model.SatOrderTotal.ToString(totalFormat)).00';
                    var sunSeatCount = @Model.SunSeatCount;
                    var sunOrderTotal = '@(Model.SunOrderTotal.ToString(totalFormat)).00';
                </script>
                <div><span class="sprite icon beforeText chair"></span><span class="seatCount">@Model.SeatCount</span></div>
                <div><span class="sprite icon beforeText dollar"></span><span class="orderTotal">@(Model.OrderTotal.ToString(totalFormat)).00</span></div>
            </div>
        </div>
        
        <table id="orders">
            <thead>
                <tr>
                    <th width="70">Order date</th>
                    <th>Play&nbsp;date</th>
                    <th width="140">Name</th>
                    <th class="centerText">Tickets</th>
                    <th class="centerText"></th>
                    <th class="centerText">Paid?</th>
                    <th class="centerText">Seated?</th>
                    <th class="centerText">Thanked?</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Orders.Where(x => x.Name.ToLower() != "test"))
                {
                    <tr data-item-id="@order.PlayOrderId" data-type-name="@typeof(play.Site.Models.PlayOrder)">
                        <td>@order.CreateDate.ToString("yyyy-MM-dd")</td>
                        <td>@order.PlayDate.ToString("MMM dd")</td>
                        <td><a class="moreInfo" href="get/@order.PlayOrderId">@order.Name</a></td>
                        <td class="centerText">@order.CoupleTicketCount / @order.IndividualTicketCount</td>
                        <td class="centerText"><span class="sprite icon @order.Platform"></span></td>
                        <td class="centerText paidCell">
                            <span class="active @(order.Paid ? "" : "hidden")">✔</span>
                            <span class="inactive @(order.Paid ? "hidden" : "")">✕</span>
                        </td>
                        <td class="centerText seatedCell">
                            <span class="active @(order.Seated ? "" : "hidden")">✔</span>
                            <span class="inactive @(order.Seated ? "hidden" : "")">✕</span>
                        </td>
                        <td class="centerText thankedCell">
                            <span class="active @(order.Thanked ? "" : "hidden")">✔</span>
                            <span class="inactive @(order.Thanked ? "hidden" : "")">✕</span>
                        </td>
                        <td class="actions">
                            <a class="tooltip" title="@order.Name" href="/object/toggle/Paid" data-class-states="unDollar:UN-paid,dollar:paid" data-display-class="paidCell"><span class="sprite icon beforeText @(order.Paid ? "unDollar" : "dollar")"></span>Mark as <span class="stateText">@(order.Paid ? "UN-paid" : "paid")</span></a>
                            <a class="tooltip" title="@order.Name" href="/object/toggle/Seated" data-class-states="unChair:UN-seated,chair:seated" data-display-class="seatedCell"><span class="sprite icon beforeText @(order.Seated ? "unChair" : "chair")"></span>Mark as <span class="stateText">@(order.Seated ? "UN-seated" : "seated")</span></a>
                            <a class="tooltip" title="@order.Name" href="/object/toggle/Thanked" data-class-states="unSmiley:UN-thanked,smiley:thanked" data-display-class="thankedCell"><span class="sprite icon beforeText @(order.Thanked ? "unSmiley" : "smiley")"></span>Mark as <span class="stateText">@(order.Thanked ? "UN-thanked" : "thanked")</span></a>
                            <a class="tooltip" title="@order.Name" href="delete"><span class="sprite icon beforeText delete"></span>Delete</a>
                        </td>
                    </tr>    
                }
            </tbody>
        </table>
        <script>
            var data = @Html.Raw(Model.Order.ToJson());
            data.MailTo = null;
            data.ResendConfText = null;
            var viewModel = ko.mapping.fromJS(data);
            ko.applyBindings(viewModel);
        </script>
    </body>
</html>




